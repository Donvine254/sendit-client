generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Parcel {
  id              String       @id @default(cuid())
  userId          String
  weight          Float
  description     String
  status          ParcelStatus @default(PENDING)
  price           Float
  pickupAddress   Json         @default("{\"region\": \"\", \"district\": \"\", \"address\": \"\", \"fullName\": \"\",\"phone\": \"\", \"email\": \"\"}")
  deliveryAddress Json         @default("{\"region\": \"\", \"district\": \"\", \"address\": \"\", \"fullName\": \"\",\"phone\": \"\", \"email\": \"\"}")
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt

  @@index([userId])
}

model shippingAddress {
  id        String   @id @default(cuid())
  userId    String   @unique
  email     String?
  fullName  String
  phone     String
  region    String
  district  String
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Invoice {
  id               String        @id @default(cuid())
  invoice_number   Int           @unique @default(autoincrement())
  fullName         String
  shipping_address String
  item             String
  amount           Int
  userId           String
  parcelId         String        @unique
  status           InvoiceStatus @default(DRAFT)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt

  @@index([userId, parcelId])
}

enum ParcelStatus {
  PENDING
  IN_TRANSIT
  DELIVERED
  CANCELLED
}

enum InvoiceStatus {
  DRAFT
  PAID
  OVERDUE
  DISPUTED
}
